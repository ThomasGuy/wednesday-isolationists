{"version":3,"sources":["webpack:///./src/components/PictureBox.js","webpack:///./src/components/ModalBox.js","webpack:///./src/components/Modal.js","webpack:///./src/components/StickyTitle.js","webpack:///./src/components/Gallery.js"],"names":["PictureStyles","styled","div","PictureBox","fluid","alt","meta","pathname","includes","subject","artist","ImageWrapper","animated","ModalBox","Modal","closeModal","animation","pointerEvents","gallery","index","useState","idx","setIdx","pages","map","picture","style","nextPicTansition","useTransition","from","opacity","transform","enter","leave","console","log","onClick","state","length","item","animationPage","props","key","Page","ModalWrapper","on","toggle","transition","Title","isArtist","StickyTitle","title","className","to","split","Gallery","data","location","setIndex","isArtistPage","isSticky","setSticky","ref","useRef","useEffect","handleScroll","current","getBoundingClientRect","top","window","addEventListener","removeEventListener","imageData","allMarkdownRemark","edges","reduce","acc","bun","node","frontmatter","slug","thisGalleryFluid","allFile","id","childImageSharp","relativePath","thisGalleryModal","value","Object","values","artistNames","Layout","onModalClick","defaultProps","artistQuery"],"mappings":"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","file":"component---src-components-gallery-js-50693ba949b5db5456b2.js","sourcesContent":["import React from 'react'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst PictureStyles = styled.div`\n  text-align: center;\n\n  p {\n    margin-top: 0.2rem;\n    font-size: 0.8rem;\n    opacity: 0.8;\n  }\n`\n\nconst PictureBox = ({ fluid, alt, meta, pathname }) => {\n  return (\n    <>\n      <PictureStyles>\n        <Img fluid={fluid} alt={alt} />\n        {pathname.includes('artists') ? <p>{meta.subject}</p> : <p>{meta.artist}</p>}\n      </PictureStyles>\n    </>\n  )\n}\n\nexport default PictureBox\n","import React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport { animated } from 'react-spring';\n\nconst ImageWrapper = styled(animated.div)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n`;\n\nconst ModalBox = ({ fluid, alt }) => {\n  return (\n    <>\n      <ImageWrapper>\n        <Img fluid={fluid} alt={alt} />\n      </ImageWrapper>\n    </>\n  );\n};\n\nexport default ModalBox;\n","import React, { useState, useCallback } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { FiX } from 'react-icons/fi';\n\nimport { ModalCard, ModalBase } from './styles';\n\nconst Modal = ({ closeModal, animation, pointerEvents, gallery, index }) => {\n  const [idx, setIdx] = useState(index);\n\n  // const onClick = useCallback(() => setIdx(state => (state + 1) % gallery.length), [\n  //   gallery.length,\n  // ]);\n\n  const onClick = () => setIdx(state => (state + 1) % gallery.length);\n\n  const pages = gallery.map(picture => ({ style }) => (\n    <animated.div style={{ ...style }}>{picture}</animated.div>\n  ));\n\n  const nextPicTansition = useTransition(idx, idx => idx, {\n    from: { opacity: 0, transform: 'translate3d(-200%,0,0) scale(0.3)' },\n    enter: { opacity: 1, transform: 'translate3d(0%,0,0) scale(1)' },\n    leave: { opacity: 0, transform: 'translate3d(50%,0,0) scale(0.5)' },\n  });\n\n  console.log('index', idx);\n\n  return (\n    <ModalBase style={{ pointerEvents }}>\n      <ModalCard style={animation} onClick={onClick}>\n        <div>\n          {nextPicTansition.map(({ item, props: animationPage, key }) => {\n            const Page = pages[item];\n            return <Page key={key} style={{ ...animationPage }} />;\n          })}\n        </div>\n        <button onClick={() => closeModal(false)}>\n          <FiX />\n        </button>\n      </ModalCard>\n    </ModalBase>\n  );\n};\n\nconst ModalWrapper = ({ on, toggle, gallery, index }) => {\n  const transition = useTransition(on, null, {\n    from: { opacity: 0, transform: `translate3d(0,-120px,0)` },\n    enter: { opacity: 1, transform: `translate3d(0,0,0)` },\n    leave: { opacity: 0, transform: `translate3d(0,120px,0)` },\n  });\n\n  const pointerEvents = on ? 'all' : 'none';\n  return (\n    <div>\n      {transition.map(\n        ({ item, key, props: animation }) =>\n          item && (\n            <Modal\n              gallery={gallery}\n              pointerEvents={pointerEvents}\n              animation={animation}\n              closeModal={toggle}\n              key={key}\n              index={index}\n            />\n          ),\n      )}\n    </div>\n  );\n};\n\nexport default ModalWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  background: #282c34;\n  width: 100%;\n  padding-top: 1rem;\n\n  & > div {\n    text-align: center;\n    font-size: ${({ isArtist }) => (isArtist ? '1.3rem' : '1.1rem')};\n\n    @media screen and (min-width: 368px) {\n      font-size: ${({ isArtist }) => (isArtist ? '1.6rem' : '1.3rem')};\n      font-weight: 600;\n    }\n\n    @media screen and (min-width: 568px) {\n      font-size: ${({ isArtist }) => (isArtist ? '2rem' : '1.7rem')};\n    }\n\n    @media screen and (min-width: 768px) {\n      font-size: ${({ isArtist }) => (isArtist ? '2.5rem' : '2.2rem')};\n      font-weight: 900;\n    }\n\n    @media screen and (min-width: 968px) {\n      font-size: ${({ isArtist }) => (isArtist ? '3rem' : '2.8rem')};\n    }\n  }\n\n  & > a {\n    align-self: bottom;\n    padding-left: 2rem;\n    font-size: 0.7rem;\n    text-decoration: none;\n    color: lightgrey;\n\n    @media screen and (min-width: 368px) {\n      font-size: 0.8rem;\n    }\n\n    @media screen and (min-width: 768px) {\n      padding-left: 4rem;\n    }\n  }\n`;\n\nconst StickyTitle = ({ title, isArtist }) => {\n  return (\n    <Title className='sticky-inner' isArtist={isArtist}>\n      <div>{title}</div>\n\n      {isArtist && <Link to={`/biography/${title.split(' ')[0]}`}>biography</Link>}\n    </Title>\n  );\n};\n\nexport default StickyTitle;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\n\nimport PictureBox from './PictureBox';\nimport ModalBox from './ModalBox';\nimport Layout from './Layout';\nimport Modal from './Modal';\nimport { GalleryLayout } from './styles';\nimport StickyTitle from './StickyTitle';\nimport { artistNames } from '../hooks/useLists';\n\nconst Gallery = ({ data, location }) => {\n  const [on, toggle] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [isArtistPage] = useState(location.pathname.includes('artists'));\n  const [isSticky, setSticky] = useState(false);\n  const ref = useRef(null);\n\n  // stick the Artist Title Bar to the top of the page\n  useEffect(() => {\n    const handleScroll = () => {\n      if (ref.current) {\n        setSticky(isArtistPage && ref.current.getBoundingClientRect().top <= 0);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, [isArtistPage]);\n\n  // Object for image metadata.. N.B. var 'bun' as in current bun\n  const imageData = data.allMarkdownRemark.edges.reduce((acc, bun) => {\n    acc[bun.node.frontmatter.slug] = bun.node.frontmatter;\n    return acc;\n  }, {});\n\n  // imaage files with metadata for this Gallery\n  const thisGalleryFluid = data.allFile.edges.map(({ node }) => {\n    return (\n      <PictureBox\n        key={node.id}\n        fluid={node.childImageSharp.fluid}\n        alt={node.relativePath.split('.')[0]}\n        meta={imageData[node.relativePath]}\n        pathname={location.pathname}\n      />\n    );\n  });\n\n  // imaage files without metadata for this Gallery modal\n  const thisGalleryModal = data.allFile.edges.map(({ node }) => {\n    return (\n      <ModalBox\n        key={node.id}\n        fluid={node.childImageSharp.fluid}\n        alt={node.relativePath.split('.')[0]}\n      />\n    );\n  });\n\n  // modal event handler\n  const onModalClick = idx => {\n    setIndex(idx);\n    toggle(true);\n  };\n\n  // render gallery\n  const renderGallery = () => {\n    return thisGalleryFluid.map((picture, idx) => {\n      return (\n        <div key={picture.key} onClick={() => onModalClick(idx)}>\n          {picture}\n        </div>\n      );\n    });\n  };\n\n  // render title\n  const title = () => {\n    const value = Object.values(imageData)[0];\n    return isArtistPage ? artistNames[value.artist] : value.subject;\n  };\n\n  return (\n    <Layout title={title()}>\n      <div className={`sticky-wrapper${isSticky ? ' sticky' : ''}`} ref={ref}>\n        <StickyTitle title={title()} isArtist={isArtistPage} />\n      </div>\n\n      {!on && <GalleryLayout>{renderGallery()}</GalleryLayout>}\n\n      <Modal on={on} toggle={toggle} gallery={thisGalleryModal} index={index} />\n    </Layout>\n  );\n};\n\n// props\nGallery.defaultProps = {\n  location: {},\n};\n\nexport default Gallery;\n// Note 'slugs' here is an array of 'relativePath'\nexport const artistQuery = graphql`\n  query galleryQuery($slugs: [String!]!) {\n    allFile(\n      filter: { relativePath: { in: $slugs } }\n      sort: { fields: childImageSharp___fluid___aspectRatio, order: DESC }\n    ) {\n      edges {\n        node {\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 350) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          id\n        }\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { slug: { in: $slugs } } }) {\n      edges {\n        node {\n          frontmatter {\n            artist\n            dimensions\n            subject\n            slug\n            date\n            week\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}